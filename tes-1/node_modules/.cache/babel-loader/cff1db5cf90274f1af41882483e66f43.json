{"ast":null,"code":"import _objectSpread from \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_EVENT, ADD_EVENT } from \"../config/constants\";\nconst initialState = {\n  event: [],\n  addEvent: [],\n  isLoading: false,\n  error: false\n};\nexport const event = (state = initialState, action) => {\n  switch (action.type) {\n    case `${GET_EVENT}_PENDING`:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case `${GET_EVENT}_FULFILLED`:\n      return _objectSpread({}, state, {\n        event: action.payload.data,\n        isLoading: false\n      });\n\n    case `${GET_EVENT}_REJECTED`:\n      return _objectSpread({}, state, {\n        error: true,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};\nexport const addEvent = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ADD_EVENT}_PENDING`:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case `${ADD_EVENT}_FULFILLED`:\n      return _objectSpread({}, state, {\n        addEvent: action.payload.data,\n        isLoading: false\n      });\n\n    case `${ADD_EVENT}_REJECTED`:\n      return _objectSpread({}, state, {\n        error: true,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/src/_reducers/event.js"],"names":["GET_EVENT","ADD_EVENT","initialState","event","addEvent","isLoading","error","state","action","type","payload","data"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMH,KAAK,GAAG,CAACI,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,GAAET,SAAU,UAAlB;AACE,+BACKO,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAM,GAAEL,SAAU,YAAlB;AACE,+BACKO,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeC,IAFxB;AAGEN,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAM,GAAEL,SAAU,WAAlB;AACE,+BACKO,KADL;AAEED,QAAAA,KAAK,EAAE,IAFT;AAGED,QAAAA,SAAS,EAAE;AAHb;;AAKF;AACE,aAAOE,KAAP;AAnBJ;AAqBD,CAtBM;AAwBP,OAAO,MAAMH,QAAQ,GAAG,CAACG,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,GAAER,SAAU,UAAlB;AACE,+BACKM,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAM,GAAEJ,SAAU,YAAlB;AACE,+BACKM,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeC,IAF3B;AAGEN,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAM,GAAEJ,SAAU,WAAlB;AACE,+BACKM,KADL;AAEED,QAAAA,KAAK,EAAE,IAFT;AAGED,QAAAA,SAAS,EAAE;AAHb;;AAKF;AACE,aAAOE,KAAP;AAnBJ;AAqBD,CAtBM","sourcesContent":["import { GET_EVENT, ADD_EVENT } from \"../config/constants\";\nconst initialState = {\n  event: [],\n  addEvent: [],\n  isLoading: false,\n  error: false\n};\n\nexport const event = (state = initialState, action) => {\n  switch (action.type) {\n    case `${GET_EVENT}_PENDING`:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case `${GET_EVENT}_FULFILLED`:\n      return {\n        ...state,\n        event: action.payload.data,\n        isLoading: false\n      };\n    case `${GET_EVENT}_REJECTED`:\n      return {\n        ...state,\n        error: true,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport const addEvent = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ADD_EVENT}_PENDING`:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case `${ADD_EVENT}_FULFILLED`:\n      return {\n        ...state,\n        addEvent: action.payload.data,\n        isLoading: false\n      };\n    case `${ADD_EVENT}_REJECTED`:\n      return {\n        ...state,\n        error: true,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}