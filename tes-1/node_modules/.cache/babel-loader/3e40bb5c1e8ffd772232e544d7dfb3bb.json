{"ast":null,"code":"import _slicedToArray from \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/src/Pages/editProfile.js\";\nimport React from \"react\";\nimport { Container, Typography, FormControl, InputLabel, Input, FormHelperText, Grid, Avatar, Button } from \"@material-ui/core\";\nimport Favorites from \"../components/favorite\";\nimport { getProfile, setProfile } from \"../_actions/user\";\nimport Footer from \"../components/footer\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nfunction EditProfile(props) {\n  const profile = props.profile.profile;\n  const update = props.update.update;\n\n  const _React$useState = React.useState({\n    email: profile.email,\n    name: profile.name,\n    phone: profile.phone\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        Values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleEmail = event => {\n    setValues({\n      email: event.target.value\n    });\n  };\n\n  const handleName = event => {\n    setValues({\n      name: event.target.value\n    });\n  };\n\n  const handlePhone = event => {\n    setValues({\n      phone: event.target.value\n    });\n  };\n\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const onSubmit = values => {\n    console.log(values);\n    props.setProfile(values);\n\n    if (update.status === \"failed\") {\n      alert(update.message);\n    } else {\n      window.location.href = \"http://localhost:3000/profile\";\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"p\",\n    color: \"secondary\",\n    style: {\n      fontWeight: \"bold\",\n      marginBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    style: {\n      padding: \"5px\",\n      backgroundColor: \"#f50057\",\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      marginBottom: \"20px\",\n      borderRadius: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, update.message)), React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    method: \"post\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"name\",\n    name: \"name\",\n    \"aria-describedby\": \"my-helper-name\",\n    value: Values.name,\n    onChange: handleName,\n    inputRef: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Za-z]+$/,\n        message: \"Value Name Not number\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-name\",\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, errors.name && errors.name.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(Input, {\n    id: \"phone\",\n    name: \"phone\",\n    \"aria-describedby\": \"my-helper-phone\",\n    onChange: handlePhone,\n    value: Values.phone,\n    inputRef: register({\n      required: \"Required\",\n      minLength: {\n        value: 11,\n        message: \"phone number too short (11 key)\"\n      },\n      pattern: {\n        value: /^[0-9]*$/,\n        message: \"Invalid phone number\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, errors.phone && errors.phone.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    id: \"email\",\n    name: \"email\",\n    \"aria-describedby\": \"my-helper-email\",\n    value: Values.email,\n    onChange: handleEmail,\n    inputRef: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, errors.email && errors.email.message)), React.createElement(\"input\", {\n    type: \"hidden\",\n    value: profile.id,\n    ref: register,\n    name: \"id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: {\n      width: \"200px\",\n      height: \"200px\",\n      fontSize: \"140px\",\n      textTransform: \"uppercase\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, profile.initial))), React.createElement(Favorites, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    profile: state.profile,\n    update: state.update\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getProfile: () => {\n      dispatch(getProfile());\n    },\n    setProfile: values => {\n      dispatch(setProfile(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);","map":{"version":3,"sources":["/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/src/Pages/editProfile.js"],"names":["React","Container","Typography","FormControl","InputLabel","Input","FormHelperText","Grid","Avatar","Button","Favorites","getProfile","setProfile","Footer","connect","useForm","EditProfile","props","profile","update","useState","email","name","phone","Values","setValues","handleEmail","event","target","value","handleName","handlePhone","handleSubmit","register","errors","onSubmit","values","console","log","status","alert","message","window","location","href","marginTop","fontWeight","marginBottom","padding","backgroundColor","color","borderRadius","required","pattern","minLength","id","display","justifyContent","width","height","fontSize","textTransform","initial","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,cANF,EAOEC,IAPF,EAQEC,MARF,EASEC,MATF,QAUO,mBAVP;AAYA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QAClBC,OADkB,GACND,KAAK,CAACC,OADA,CAClBA,OADkB;AAAA,QAElBC,MAFkB,GAEPF,KAAK,CAACE,MAFC,CAElBA,MAFkB;;AAAA,0BAGEnB,KAAK,CAACoB,QAAN,CAAe;AACzCC,IAAAA,KAAK,EAAEH,OAAO,CAACG,KAD0B;AAEzCC,IAAAA,IAAI,EAAEJ,OAAO,CAACI,IAF2B;AAGzCC,IAAAA,KAAK,EAAEL,OAAO,CAACK;AAH0B,GAAf,CAHF;AAAA;AAAA,QAGnBC,MAHmB;AAAA,QAGXC,SAHW;;AAS1B,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,SAAS,CAAC;AAAEJ,MAAAA,KAAK,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAGH,KAAK,IAAI;AAC1BF,IAAAA,SAAS,CAAC;AAAEH,MAAAA,IAAI,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAArB,KAAD,CAAT;AACD,GAFD;;AAGA,QAAME,WAAW,GAAGJ,KAAK,IAAI;AAC3BF,IAAAA,SAAS,CAAC;AAAEF,MAAAA,KAAK,EAAEI,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAD,CAAT;AACD,GAFD;;AAf0B,mBAkBiBd,OAAO,EAlBxB;AAAA,QAkBlBiB,YAlBkB,YAkBlBA,YAlBkB;AAAA,QAkBJC,QAlBI,YAkBJA,QAlBI;AAAA,QAkBMC,MAlBN,YAkBMA,MAlBN;;AAmB1B,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAnB,IAAAA,KAAK,CAACL,UAAN,CAAiBwB,MAAjB;;AACA,QAAIjB,MAAM,CAACoB,MAAP,KAAkB,QAAtB,EAAgC;AAC9BC,MAAAA,KAAK,CAACrB,MAAM,CAACsB,OAAR,CAAL;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,+BAAvB;AACD;AACF,GARD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,SAAS,EAAC,GAFZ;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,YAAY,EAAE;AAApC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EASE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,eAAe,EAAE,SAFZ;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILJ,MAAAA,UAAU,EAAE,MAJP;AAKLC,MAAAA,YAAY,EAAE,MALT;AAMLI,MAAAA,YAAY,EAAE;AANT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,MAAM,CAACsB,OADV,CAVF,CATF,EAuBE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,QAAQ,EAAET,YAAY,CAACG,QAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAAEY,MAAAA,YAAY,EAAE;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,wBAAiB,gBAHnB;AAIE,IAAA,KAAK,EAAEvB,MAAM,CAACF,IAJhB;AAKE,IAAA,QAAQ,EAAEQ,UALZ;AAME,IAAA,QAAQ,EAAEG,QAAQ,CAAC;AACjBmB,MAAAA,QAAQ,EAAE,UADO;AAEjBC,MAAAA,OAAO,EAAE;AACPxB,QAAAA,KAAK,EAAE,aADA;AAEPY,QAAAA,OAAO,EAAE;AAFF;AAFQ,KAAD,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAgBE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,gBAAnB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACZ,IAAP,IAAeY,MAAM,CAACZ,IAAP,CAAYmB,OAD9B,CAhBF,CALF,EAyBE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAY,EAAE;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,wBAAiB,iBAHnB;AAIE,IAAA,QAAQ,EAAEhB,WAJZ;AAKE,IAAA,KAAK,EAAEP,MAAM,CAACD,KALhB;AAME,IAAA,QAAQ,EAAEU,QAAQ,CAAC;AACjBmB,MAAAA,QAAQ,EAAE,UADO;AAEjBE,MAAAA,SAAS,EAAE;AACTzB,QAAAA,KAAK,EAAE,EADE;AAETY,QAAAA,OAAO,EAAE;AAFA,OAFM;AAMjBY,MAAAA,OAAO,EAAE;AACPxB,QAAAA,KAAK,EAAE,UADA;AAEPY,QAAAA,OAAO,EAAE;AAFF;AANQ,KAAD,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAoBE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACX,KAAP,IAAgBW,MAAM,CAACX,KAAP,CAAakB,OADhC,CApBF,CAzBF,EAiDE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAY,EAAE;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,wBAAiB,iBAHnB;AAIE,IAAA,KAAK,EAAEvB,MAAM,CAACH,KAJhB;AAKE,IAAA,QAAQ,EAAEK,WALZ;AAME,IAAA,QAAQ,EAAEO,QAAQ,CAAC;AACjBmB,MAAAA,QAAQ,EAAE,UADO;AAEjBC,MAAAA,OAAO,EAAE;AACPxB,QAAAA,KAAK,EAAE,2CADA;AAEPY,QAAAA,OAAO,EAAE;AAFF;AAFQ,KAAD,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAgBE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,CAACb,KAAP,IAAgBa,MAAM,CAACb,KAAP,CAAaoB,OADhC,CAhBF,CAjDF,EAqEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEvB,OAAO,CAACqC,EAFjB;AAGE,IAAA,GAAG,EAAEtB,QAHP;AAIE,IAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArEF,EA2EE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,KAAK,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3EF,CADF,CADF,EAkFE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,KAAK,EAAE;AAAEuB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,QAAQ,EAAE,OAHL;AAILC,MAAAA,aAAa,EAAE;AAJV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG3C,OAAO,CAAC4C,OARX,CALF,CAlFF,CAvBF,EA2HE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3HF,CADF,EA8HE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9HF,CADF;AAkID;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACL/C,IAAAA,OAAO,EAAE8C,KAAK,CAAC9C,OADV;AAELC,IAAAA,MAAM,EAAE6C,KAAK,CAAC7C;AAFT,GAAP;AAID,CALD;;AAOA,MAAM+C,kBAAkB,GAAG,CAACC,QAAD,EAAWF,QAAX,KAAwB;AACjD,SAAO;AACLtD,IAAAA,UAAU,EAAE,MAAM;AAChBwD,MAAAA,QAAQ,CAACxD,UAAU,EAAX,CAAR;AACD,KAHI;AAILC,IAAAA,UAAU,EAAEwB,MAAM,IAAI;AACpB+B,MAAAA,QAAQ,CAACvD,UAAU,CAACwB,MAAD,CAAX,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAUA,eAAetB,OAAO,CAACiD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClD,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Typography,\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n  Grid,\n  Avatar,\n  Button\n} from \"@material-ui/core\";\n\nimport Favorites from \"../components/favorite\";\nimport { getProfile, setProfile } from \"../_actions/user\";\nimport Footer from \"../components/footer\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nfunction EditProfile(props) {\n  const { profile } = props.profile;\n  const { update } = props.update;\n  const [Values, setValues] = React.useState({\n    email: profile.email,\n    name: profile.name,\n    phone: profile.phone\n  });\n\n  const handleEmail = event => {\n    setValues({ email: event.target.value });\n  };\n  const handleName = event => {\n    setValues({ name: event.target.value });\n  };\n  const handlePhone = event => {\n    setValues({ phone: event.target.value });\n  };\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = values => {\n    console.log(values);\n    props.setProfile(values);\n    if (update.status === \"failed\") {\n      alert(update.message);\n    } else {\n      window.location.href = \"http://localhost:3000/profile\";\n    }\n  };\n  return (\n    <div>\n      <Container maxWidth=\"md\" style={{ marginTop: \"50px\" }}>\n        <Typography\n          variant=\"h4\"\n          component=\"p\"\n          color=\"secondary\"\n          style={{ fontWeight: \"bold\", marginBottom: \"20px\" }}\n        >\n          Edit Profile\n        </Typography>\n        <div\n          style={{\n            padding: \"5px\",\n            backgroundColor: \"#f50057\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            marginBottom: \"20px\",\n            borderRadius: \"5px\"\n          }}\n        >\n          <Typography variant=\"subtitle1\" component=\"p\">\n            {update.message}\n          </Typography>\n        </div>\n        <Grid container spacing={5}>\n          <Grid item xs={8}>\n            <form\n              autoComplete=\"off\"\n              method=\"post\"\n              onSubmit={handleSubmit(onSubmit)}\n            >\n              <FormControl fullWidth style={{ marginBottom: \"15px\" }}>\n                <InputLabel htmlFor=\"name\">Name</InputLabel>\n                <Input\n                  id=\"name\"\n                  name=\"name\"\n                  aria-describedby=\"my-helper-name\"\n                  value={Values.name}\n                  onChange={handleName}\n                  inputRef={register({\n                    required: \"Required\",\n                    pattern: {\n                      value: /^[A-Za-z]+$/,\n                      message: \"Value Name Not number\"\n                    }\n                  })}\n                />\n                <FormHelperText id=\"my-helper-name\" color=\"error\">\n                  {errors.name && errors.name.message}\n                </FormHelperText>\n              </FormControl>\n              <FormControl fullWidth style={{ marginBottom: \"15px\" }}>\n                <InputLabel htmlFor=\"phone\">Phone</InputLabel>\n                <Input\n                  id=\"phone\"\n                  name=\"phone\"\n                  aria-describedby=\"my-helper-phone\"\n                  onChange={handlePhone}\n                  value={Values.phone}\n                  inputRef={register({\n                    required: \"Required\",\n                    minLength: {\n                      value: 11,\n                      message: \"phone number too short (11 key)\"\n                    },\n                    pattern: {\n                      value: /^[0-9]*$/,\n                      message: \"Invalid phone number\"\n                    }\n                  })}\n                />\n                <FormHelperText id=\"my-helper-phone\">\n                  {errors.phone && errors.phone.message}\n                </FormHelperText>\n              </FormControl>\n              <FormControl fullWidth style={{ marginBottom: \"15px\" }}>\n                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                <Input\n                  id=\"email\"\n                  name=\"email\"\n                  aria-describedby=\"my-helper-email\"\n                  value={Values.email}\n                  onChange={handleEmail}\n                  inputRef={register({\n                    required: \"Required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                      message: \"invalid email address\"\n                    }\n                  })}\n                />\n                <FormHelperText id=\"my-helper-email\">\n                  {errors.email && errors.email.message}\n                </FormHelperText>\n              </FormControl>\n              <input\n                type=\"hidden\"\n                value={profile.id}\n                ref={register}\n                name=\"id\"\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n                Save\n              </Button>\n            </form>\n          </Grid>\n          <Grid\n            item\n            xs={4}\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Avatar\n              style={{\n                width: \"200px\",\n                height: \"200px\",\n                fontSize: \"140px\",\n                textTransform: \"uppercase\"\n              }}\n            >\n              {profile.initial}\n            </Avatar>\n          </Grid>\n        </Grid>\n\n        <Favorites />\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    profile: state.profile,\n    update: state.update\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getProfile: () => {\n      dispatch(getProfile());\n    },\n    setProfile: values => {\n      dispatch(setProfile(values));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}