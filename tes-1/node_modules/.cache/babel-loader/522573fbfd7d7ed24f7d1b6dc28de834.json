{"ast":null,"code":"import _objectSpread from \"/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/src/components/Dialog.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { TextField, Grid, FormControl, FormHelperText, Typography } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { setOrder } from \"../_actions/payments\";\n\nfunction ResponsiveDialog(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const _React$useState3 = React.useState({\n    price: props.price,\n    quantity: props.quantity,\n    totalPrice: \"\",\n    message: \"\"\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        buy = _React$useState4[0],\n        setBuy = _React$useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleChange = event => {\n    setBuy(_objectSpread({}, buy, {\n      quantity: event.target.value,\n      totalPrice: event.target.value * props.price\n    }));\n  };\n\n  const onSubmit = values => {\n    if (values.quantity < 1) {\n      setBuy(_objectSpread({}, buy, {\n        message: \"Quantity must be greater than 0\"\n      }));\n    } else {\n      props.addPayment(values); //   const { addPayment } = props.addPayment;\n      //   if (addPayment.success === false) {\n      //     setBuy({ ...buy, message: addPayment.message });\n      //   } else {\n\n      window.location.href = \"http://localhost:3000/payment\"; //   }\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Buy\"), React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Input Your Quantity Ticket\"), React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Enter the number of tickets that you want to buy!\", React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#f50000\",\n      padding: \"10px\",\n      borderRadius: \"5px\",\n      color: \"#fff\",\n      fontSize: \"16px\",\n      fontFamily: \"Poppins\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, buy.message))), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    name: \"quantity\",\n    id: \"quantity\",\n    label: \"Quantity\",\n    type: \"number\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    fullWidth: true,\n    inputRef: register({\n      required: \"required\",\n      pattern: {\n        value: /^[0-9]*$/,\n        message: \"quantity value is number only!\"\n      },\n      minLength: {\n        value: 1,\n        message: \"Minimal Quantity is 1\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, errors.quantity && errors.quantity.message)), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"event_id\",\n    value: props.event_id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    sm: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"totalPrice\",\n    label: \"Total Price\",\n    type: \"number\",\n    variant: \"outlined\",\n    value: buy.totalPrice,\n    fullWidth: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Shop\")))));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    addPayment: state.addPayment\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    addPayment: values => {\n      dispatch(setOrder(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsiveDialog);","map":{"version":3,"sources":["/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/src/components/Dialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","TextField","Grid","FormControl","FormHelperText","Typography","useForm","connect","setOrder","ResponsiveDialog","props","useState","open","setOpen","theme","fullScreen","breakpoints","down","handleSubmit","register","errors","price","quantity","totalPrice","message","buy","setBuy","handleClickOpen","handleChange","event","target","value","onSubmit","values","addPayment","window","location","href","handleClose","backgroundColor","padding","borderRadius","color","fontSize","fontFamily","fontWeight","required","pattern","minLength","event_id","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,0BACPlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CADO;AAAA;AAAA,QACxBC,IADwB;AAAA,QAClBC,OADkB;;AAE/B,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAMe,UAAU,GAAGhB,aAAa,CAACe,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;;AAH+B,mBAIYX,OAAO,EAJnB;AAAA,QAIvBY,YAJuB,YAIvBA,YAJuB;AAAA,QAITC,QAJS,YAITA,QAJS;AAAA,QAICC,MAJD,YAICA,MAJD;;AAAA,2BAKT5B,KAAK,CAACmB,QAAN,CAAe;AACnCU,IAAAA,KAAK,EAAEX,KAAK,CAACW,KADsB;AAEnCC,IAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAFmB;AAGnCC,IAAAA,UAAU,EAAE,EAHuB;AAInCC,IAAAA,OAAO,EAAE;AAJ0B,GAAf,CALS;AAAA;AAAA,QAKxBC,GALwB;AAAA,QAKnBC,MALmB;;AAW/B,QAAMC,eAAe,GAAG,MAAM;AAC5Bd,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMe,YAAY,GAAGC,KAAK,IAAI;AAC5BH,IAAAA,MAAM,mBACDD,GADC;AAEJH,MAAAA,QAAQ,EAAEO,KAAK,CAACC,MAAN,CAAaC,KAFnB;AAGJR,MAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqBrB,KAAK,CAACW;AAHnC,OAAN;AAKD,GAND;;AAOA,QAAMW,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAIA,MAAM,CAACX,QAAP,GAAkB,CAAtB,EAAyB;AACvBI,MAAAA,MAAM,mBAAMD,GAAN;AAAWD,QAAAA,OAAO,EAAE;AAApB,SAAN;AACD,KAFD,MAEO;AACLd,MAAAA,KAAK,CAACwB,UAAN,CAAiBD,MAAjB,EADK,CAEL;AACA;AACA;AACA;;AACAE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,+BAAvB,CANK,CAOL;AACD;AACF,GAZD;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACxBzB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAEc,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAIE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEZ,UADd;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,OAAO,EAAE0B,WAHX;AAIE,uBAAgB,yBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANF,EASE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEpB,YAAY,CAACc,QAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAEE;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,YAAY,EAAE,KAHT;AAILC,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,QAAQ,EAAE,MALL;AAMLC,MAAAA,UAAU,EAAE,SANP;AAOLC,MAAAA,UAAU,EAAE;AAPP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,GAAG,CAACD,OADP,CAXF,CAFF,CADF,EAmBE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAC,UAJL;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,QAAQ,EAAEI,YAPZ;AAQE,IAAA,OAAO,EAAC,UARV;AASE,IAAA,SAAS,MATX;AAUE,IAAA,QAAQ,EAAET,QAAQ,CAAC;AACjB2B,MAAAA,QAAQ,EAAE,UADO;AAEjBC,MAAAA,OAAO,EAAE;AACPhB,QAAAA,KAAK,EAAE,UADA;AAEPP,QAAAA,OAAO,EAAE;AAFF,OAFQ;AAMjBwB,MAAAA,SAAS,EAAE;AACTjB,QAAAA,KAAK,EAAE,CADE;AAETP,QAAAA,OAAO,EAAE;AAFA;AANM,KAAD,CAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAuBE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACE,QAAP,CAAgBE,OADtC,CAvBF,CADF,EA4BE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEd,KAAK,CAACuC,QAHf;AAIE,IAAA,GAAG,EAAE9B,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,CADF,EAoCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,KAAK,EAAEM,GAAG,CAACF,UAPb;AAQE,IAAA,SAAS,MARX;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApCF,CAnBF,CADF,EAuEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEe,WAA3B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,SAAS,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAvEF,CATF,CAJF,CADF;AAiGD;;AAED,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLlB,IAAAA,UAAU,EAAEiB,KAAK,CAACjB;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMmB,kBAAkB,GAAG,CAACC,QAAD,EAAWF,QAAX,KAAwB;AACjD,SAAO;AACLlB,IAAAA,UAAU,EAAED,MAAM,IAAI;AACpBqB,MAAAA,QAAQ,CAAC9C,QAAQ,CAACyB,MAAD,CAAT,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAe1B,OAAO,CAAC2C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5C,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Grid,\n  FormControl,\n  FormHelperText,\n  Typography\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { setOrder } from \"../_actions/payments\";\n\nfunction ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const { handleSubmit, register, errors } = useForm();\n  const [buy, setBuy] = React.useState({\n    price: props.price,\n    quantity: props.quantity,\n    totalPrice: \"\",\n    message: \"\"\n  });\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleChange = event => {\n    setBuy({\n      ...buy,\n      quantity: event.target.value,\n      totalPrice: event.target.value * props.price\n    });\n  };\n  const onSubmit = values => {\n    if (values.quantity < 1) {\n      setBuy({ ...buy, message: \"Quantity must be greater than 0\" });\n    } else {\n      props.addPayment(values);\n      //   const { addPayment } = props.addPayment;\n      //   if (addPayment.success === false) {\n      //     setBuy({ ...buy, message: addPayment.message });\n      //   } else {\n      window.location.href = \"http://localhost:3000/payment\";\n      //   }\n    }\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n        Buy\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Input Your Quantity Ticket\n        </DialogTitle>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <DialogContentText>\n              Enter the number of tickets that you want to buy!\n              <div\n                style={{\n                  backgroundColor: \"#f50000\",\n                  padding: \"10px\",\n                  borderRadius: \"5px\",\n                  color: \"#fff\",\n                  fontSize: \"16px\",\n                  fontFamily: \"Poppins\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                <Typography variant=\"body2\" component=\"p\">\n                  {buy.message}\n                </Typography>\n              </div>\n            </DialogContentText>\n            <Grid container spacing={2}>\n              <Grid item sm={3}>\n                <FormControl>\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    name=\"quantity\"\n                    id=\"quantity\"\n                    label=\"Quantity\"\n                    type=\"number\"\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                    fullWidth\n                    inputRef={register({\n                      required: \"required\",\n                      pattern: {\n                        value: /^[0-9]*$/,\n                        message: \"quantity value is number only!\"\n                      },\n                      minLength: {\n                        value: 1,\n                        message: \"Minimal Quantity is 1\"\n                      }\n                    })}\n                  />\n                  <FormHelperText>\n                    {errors.quantity && errors.quantity.message}\n                  </FormHelperText>\n                </FormControl>\n                <input\n                  type=\"hidden\"\n                  name=\"event_id\"\n                  value={props.event_id}\n                  ref={register}\n                />\n              </Grid>\n              <Grid item sm={9}>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"totalPrice\"\n                  label=\"Total Price\"\n                  type=\"number\"\n                  variant=\"outlined\"\n                  value={buy.totalPrice}\n                  fullWidth\n                  disabled\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\" autoFocus>\n              Shop\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    addPayment: state.addPayment\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    addPayment: values => {\n      dispatch(setOrder(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsiveDialog);\n"]},"metadata":{},"sourceType":"module"}