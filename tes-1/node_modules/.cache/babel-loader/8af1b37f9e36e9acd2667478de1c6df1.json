{"ast":null,"code":"import _objectSpread from \"/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/src/components/HeaderLogin.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Container, Avatar, List, ListItem, ListItemText, Drawer } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  list: {\n    width: 250\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction ButtonAppBar(props) {\n  const profile = props.profile.profile;\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: \"none\",\n      color: \"#fff\",\n      textTransform: \"uppercase\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Dumb-Tick\")), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, profile.name), React.createElement(TemporaryDrawer, {\n    avatar: profile.initial,\n    email: profile.email,\n    name: profile.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n}\n\nfunction TemporaryDrawer(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    right: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const lisData = [{\n    target: \"/profile\",\n    name: \"Profile\"\n  }, {\n    target: \"/my-ticket\",\n    name: \"My Ticket\"\n  }, {\n    target: \"/payment\",\n    name: \"Payment\"\n  }, {\n    target: \"/add-event\",\n    name: \"Add Event\"\n  }, {\n    target: \"/logout\",\n    name: \"Logout\"\n  }];\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"15px\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.avatar), React.createElement(\"div\", {\n    style: {\n      marginLeft: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, props.name), React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, props.email))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, lisData.map((text, index) => React.createElement(Link, {\n    to: text.target,\n    key: index,\n    style: {\n      textDecoration: \"none\",\n      fontWeight: \"bold\",\n      textTransform: \"capitalized\",\n      color: \"#35424a\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text.name,\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))))));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: toggleDrawer(\"right\", true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, props.avatar)), React.createElement(Drawer, {\n    anchor: \"right\",\n    open: state.right,\n    onClose: toggleDrawer(\"right\", false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, sideList(\"right\")));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    profile: state.profile\n  };\n}; // const mapDispatchToProps = (dispatch, ownProps) => {\n//   return {\n//     getProfile: () => {\n//       dispatch(getProfile());\n//     }\n//   };\n// };\n\n\nexport default connect(mapStateToProps)(ButtonAppBar);","map":{"version":3,"sources":["/home/hitech/dumbtik/DW13KMC9U_dumb-tick/tes-1/src/components/HeaderLogin.js"],"names":["React","makeStyles","AppBar","Toolbar","Typography","IconButton","Container","Avatar","List","ListItem","ListItemText","Drawer","connect","Link","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","list","width","title","ButtonAppBar","props","profile","classes","textDecoration","color","textTransform","fontWeight","name","initial","email","TemporaryDrawer","useState","right","state","setState","toggleDrawer","side","open","event","type","key","lisData","target","sideList","display","padding","alignItems","avatar","marginLeft","map","text","index","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n  Container,\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  Drawer\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  list: {\n    width: 250\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nfunction ButtonAppBar(props) {\n  const { profile } = props.profile;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Container>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link\n                to=\"/\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#fff\",\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                Dumb-Tick\n              </Link>\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              component=\"p\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              {profile.name}\n            </Typography>\n            <TemporaryDrawer\n              avatar={profile.initial}\n              email={profile.email}\n              name={profile.name}\n            />\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n}\n\nfunction TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n  const lisData = [\n    {\n      target: \"/profile\",\n      name: \"Profile\"\n    },\n    {\n      target: \"/my-ticket\",\n      name: \"My Ticket\"\n    },\n    {\n      target: \"/payment\",\n      name: \"Payment\"\n    },\n    {\n      target: \"/add-event\",\n      name: \"Add Event\"\n    },\n    {\n      target: \"/logout\",\n      name: \"Logout\"\n    }\n  ];\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <div style={{ display: \"flex\", padding: \"15px\", alignItems: \"center\" }}>\n        <Avatar>{props.avatar}</Avatar>\n        <div style={{ marginLeft: \"10px\" }}>\n          <Typography variant=\"body1\">{props.name}</Typography>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {props.email}\n          </Typography>\n        </div>\n      </div>\n      <List>\n        {lisData.map((text, index) => (\n          <Link\n            to={text.target}\n            key={index}\n            style={{\n              textDecoration: \"none\",\n              fontWeight: \"bold\",\n              textTransform: \"capitalized\",\n              color: \"#35424a\"\n            }}\n          >\n            <ListItem button>\n              <ListItemText\n                primary={text.name}\n                style={{ fontWeight: \"bold\" }}\n              />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton onClick={toggleDrawer(\"right\", true)}>\n        <Avatar>{props.avatar}</Avatar>\n      </IconButton>\n      <Drawer\n        anchor=\"right\"\n        open={state.right}\n        onClose={toggleDrawer(\"right\", false)}\n      >\n        {sideList(\"right\")}\n      </Drawer>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    profile: state.profile\n  };\n};\n\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//   return {\n//     getProfile: () => {\n//       dispatch(getProfile());\n//     }\n//   };\n// };\n\nexport default connect(mapStateToProps)(ButtonAppBar);\n"]},"metadata":{},"sourceType":"module"}