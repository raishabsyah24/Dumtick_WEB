{"ast":null,"code":"import _objectSpread from \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/src/components/Header.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Container, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { setUsers, setLogin } from '../_actions/user';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction ButtonAppBar(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        openLogin = _React$useState2[0],\n        setOpenLogin = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        openRegister = _React$useState4[0],\n        setOpenRegister = _React$useState4[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const _React$useState5 = React.useState({\n    password: '',\n    showPassword: false\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        values = _React$useState6[0],\n        setValues = _React$useState6[1];\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread({}, values, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const handleClickShowPassword = () => {\n    setValues(_objectSpread({}, values, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClickOpen = () => {\n    setOpenLogin(true);\n  };\n\n  const handleClose = () => {\n    setOpenLogin(false);\n  };\n\n  const handleClickOpen1 = () => {\n    setOpenRegister(true);\n  };\n\n  const handleClose1 = () => {\n    setOpenRegister(false);\n  }; // integrate global state\n\n\n  const onSubmit = (data, e) => {\n    e.target.reset();\n    props.setUsers(data);\n  };\n\n  const onSubmitLogin = (data, e) => {\n    e.target.reset();\n    props.setLogin(data);\n  };\n\n  const signUp = props.signUp.signUp;\n\n  if (signUp.message === 'success') {\n    localStorage.setItem('token', signUp.token);\n    window.location.href = 'http://localhost:3000';\n  } // login\n\n\n  const login = props.login.login;\n\n  if (login.message === 'success') {\n    localStorage.setItem('token', login.token);\n    window.location.href = 'http://localhost:3000';\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: 'none',\n      color: '#fff',\n      textTransform: 'uppercase',\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"AG-IT News\")), React.createElement(Button, {\n    color: \"inherit\",\n    variant: \"outlined\",\n    onClick: handleClickOpen1,\n    style: {\n      marginRight: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Button, {\n    color: \"inherit\",\n    variant: \"outlined\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Login\")))), React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: openLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Login\"), React.createElement(DialogContent, {\n    dividers: true,\n    style: {\n      width: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmitLogin),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    id: \"username\",\n    name: \"username\",\n    \"aria-describedby\": \"my-helper-username\",\n    inputRef: register({\n      required: 'Required',\n      minLength: {\n        value: 5,\n        message: 'Your username too short'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, errors.username && errors.username.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"standard-adornment-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    id: \"standard-adornment-password\",\n    type: values.showPassword ? 'text' : 'password',\n    name: \"password\" // value={values.password}\n    ,\n    onChange: handleChange('password'),\n    inputRef: register({\n      required: 'Required',\n      minLength: {\n        value: 8,\n        message: 'Your password too short'\n      }\n    }),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, values.showPassword ? React.createElement(Visibility, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }) : React.createElement(VisibilityOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, errors.password && errors.password.message)), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"secondary\",\n    fullWidth: true,\n    type: \"submit\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Login\")))), React.createElement(Dialog, {\n    onClose: handleClose1,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: openRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Register\"), React.createElement(DialogContent, {\n    dividers: true,\n    style: {\n      width: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"name\",\n    name: \"name\",\n    \"aria-describedby\": \"my-helper-name\",\n    inputRef: register({\n      required: 'required',\n      pattern: {\n        value: /\\w/,\n        message: 'Value Name Not number'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, errors.name && errors.name.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    id: \"email\",\n    name: \"email\",\n    \"aria-describedby\": \"my-helper-email\",\n    inputRef: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: 'invalid email address'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, errors.email && errors.email.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(Input, {\n    id: \"phone\",\n    name: \"phone\",\n    \"aria-describedby\": \"my-helper-phone\",\n    inputRef: register({\n      required: 'Required',\n      minLength: {\n        value: 11,\n        message: 'phone number too short (11 key)'\n      },\n      pattern: {\n        value: /^[0-9]*$/,\n        message: 'Invalid phone number'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-email\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, errors.phone && errors.phone.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    id: \"username\",\n    name: \"username\",\n    \"aria-describedby\": \"my-helper-username\",\n    inputRef: register({\n      required: 'Required',\n      minLength: {\n        value: 5,\n        message: 'Your username too short'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, errors.username && errors.username.message)), React.createElement(FormControl, {\n    fullWidth: true,\n    style: {\n      marginBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"standard-adornment-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    id: \"standard-adornment-password\",\n    type: values.showPassword ? 'text' : 'password',\n    name: \"password\" // value={values.password}\n    ,\n    onChange: handleChange('password'),\n    inputRef: register({\n      required: 'Required',\n      minLength: {\n        value: 8,\n        message: 'Your password too short'\n      }\n    }),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, values.showPassword ? React.createElement(Visibility, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }) : React.createElement(VisibilityOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"my-helper-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, errors.password && errors.password.message)), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"secondary\",\n    fullWidth: true,\n    type: \"submit\",\n    onClick: handleClose1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, \"Register\")))));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    signUp: state.signUp,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setUsers: data => {\n      dispatch(setUsers(data));\n    },\n    setLogin: data => {\n      dispatch(setLogin(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonAppBar);","map":{"version":3,"sources":["/home/hitech/dumbtik/DW13XPZTP_Rais_Dumtick/tes-1/src/components/Header.js"],"names":["React","withStyles","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","Container","FormControl","InputLabel","Input","FormHelperText","Dialog","MuiDialogTitle","MuiDialogContent","CloseIcon","Visibility","VisibilityOff","InputAdornment","Link","connect","useForm","setUsers","setLogin","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","useStyles","flexGrow","menuButton","marginRight","title","ButtonAppBar","useState","openLogin","setOpenLogin","openRegister","setOpenRegister","register","handleSubmit","errors","password","showPassword","values","setValues","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","handleClickOpen","handleClose","handleClickOpen1","handleClose1","onSubmit","data","e","reset","onSubmitLogin","signUp","message","localStorage","setItem","token","window","location","href","login","textDecoration","textTransform","fontWeight","width","marginBottom","required","minLength","username","pattern","name","email","phone","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SACEC,SADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,cALF,QAMO,mBANP;AAOA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,kBAAjC;;AACA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAe,CAAf;AAFL,GADiB;AAKvBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,KAAK,EAAEP,KAAK,CAACI,OAAN,CAAe,CAAf,CAFI;AAGXI,IAAAA,GAAG,EAAER,KAAK,CAACI,OAAN,CAAe,CAAf,CAHM;AAIXK,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJI;AALU,CAAL,CAApB;;AAaA,MAAMC,WAAW,GAAGrC,UAAU,CAAEwB,MAAF,CAAV,CAAqBc,KAAK,IAAI;AAAA,QACzCC,QADyC,GACDD,KADC,CACzCC,QADyC;AAAA,QAC/BC,OAD+B,GACDF,KADC,CAC/BE,OAD+B;AAAA,QACtBC,OADsB,GACDH,KADC,CACtBG,OADsB;AAAA,QACVC,KADU,4BACDJ,KADC;;AAEhD,SACE,oBAAC,cAAD;AAAgB,IAAA,iBAAiB,MAAjC;AAAkC,IAAA,SAAS,EAAEE,OAAO,CAACd;AAArD,KAA+DgB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,QAA1B,CADF,EAEGE,OAAO,GACJ,oBAAC,UAAD;AACE,kBAAW,OADb;AAEE,IAAA,SAAS,EAAED,OAAO,CAACV,WAFrB;AAGE,IAAA,OAAO,EAAEW,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADI,GAQJ,IAVN,CADF;AAcD,CAhBmB,CAApB;AAkBA,MAAME,aAAa,GAAG3C,UAAU,CAAEyB,KAAK,KAAK;AAC1CC,EAAAA,IAAI,EAAE;AACJE,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAe,CAAf;AADL;AADoC,CAAL,CAAP,CAAV,CAIjBf,gBAJiB,CAAtB;AAMA,MAAM8B,SAAS,GAAG3C,UAAU,CAAEwB,KAAK,KAAK;AACtCC,EAAAA,IAAI,EAAE;AACJmB,IAAAA,QAAQ,EAAE;AADN,GADgC;AAItCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEtB,KAAK,CAACI,OAAN,CAAe,CAAf;AADH,GAJ0B;AAOtCmB,EAAAA,KAAK,EAAE;AACLH,IAAAA,QAAQ,EAAE;AADL;AAP+B,CAAL,CAAP,CAA5B;;AAYA,SAASI,YAAT,CAAuBX,KAAvB,EAA8B;AAC5B,QAAME,OAAO,GAAGI,SAAS,EAAzB;;AAD4B,0BAEM7C,KAAK,CAACmD,QAAN,CAAgB,KAAhB,CAFN;AAAA;AAAA,QAErBC,SAFqB;AAAA,QAEVC,YAFU;;AAAA,2BAGYrD,KAAK,CAACmD,QAAN,CAAgB,KAAhB,CAHZ;AAAA;AAAA,QAGrBG,YAHqB;AAAA,QAGPC,eAHO;;AAAA,mBAKajC,OAAO,EALpB;AAAA,QAKrBkC,QALqB,YAKrBA,QALqB;AAAA,QAKXC,YALW,YAKXA,YALW;AAAA,QAKGC,MALH,YAKGA,MALH;;AAAA,2BAOA1D,KAAK,CAACmD,QAAN,CAAgB;AAC1CQ,IAAAA,QAAQ,EAAE,EADgC;AAE1CC,IAAAA,YAAY,EAAE;AAF4B,GAAhB,CAPA;AAAA;AAAA,QAOrBC,MAPqB;AAAA,QAObC,SAPa;;AAY5B,QAAMC,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACpCH,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACG,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAAnC,OAAT;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAG,MAAM;AACpCN,IAAAA,SAAS,mBAAMD,MAAN;AAAcD,MAAAA,YAAY,EAAE,CAACC,MAAM,CAACD;AAApC,OAAT;AACD,GAFD;;AAIA,QAAMS,uBAAuB,GAAGJ,KAAK,IAAI;AACvCA,IAAAA,KAAK,CAACK,cAAN;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BlB,IAAAA,YAAY,CAAE,IAAF,CAAZ;AACD,GAFD;;AAGA,QAAMmB,WAAW,GAAG,MAAM;AACxBnB,IAAAA,YAAY,CAAE,KAAF,CAAZ;AACD,GAFD;;AAGA,QAAMoB,gBAAgB,GAAG,MAAM;AAC7BlB,IAAAA,eAAe,CAAE,IAAF,CAAf;AACD,GAFD;;AAGA,QAAMmB,YAAY,GAAG,MAAM;AACzBnB,IAAAA,eAAe,CAAE,KAAF,CAAf;AACD,GAFD,CAjC4B,CAqC5B;;;AACA,QAAMoB,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5BA,IAAAA,CAAC,CAACX,MAAF,CAASY,KAAT;AACAvC,IAAAA,KAAK,CAAChB,QAAN,CAAgBqD,IAAhB;AACD,GAHD;;AAIA,QAAMG,aAAa,GAAG,CAACH,IAAD,EAAOC,CAAP,KAAa;AACjCA,IAAAA,CAAC,CAACX,MAAF,CAASY,KAAT;AACAvC,IAAAA,KAAK,CAACf,QAAN,CAAgBoD,IAAhB;AACD,GAHD;;AA1C4B,QA8CrBI,MA9CqB,GA8CXzC,KAAK,CAACyC,MA9CK,CA8CrBA,MA9CqB;;AA+C5B,MAAIA,MAAM,CAACC,OAAP,KAAmB,SAAvB,EAAkC;AAChCC,IAAAA,YAAY,CAACC,OAAb,CAAsB,OAAtB,EAA+BH,MAAM,CAACI,KAAtC;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,uBAAvB;AACD,GAlD2B,CAoD5B;;;AApD4B,QAqDrBC,KArDqB,GAqDZjD,KAAK,CAACiD,KArDM,CAqDrBA,KArDqB;;AAsD5B,MAAIA,KAAK,CAACP,OAAN,KAAkB,SAAtB,EAAiC;AAC/BC,IAAAA,YAAY,CAACC,OAAb,CAAsB,OAAtB,EAA+BK,KAAK,CAACJ,KAArC;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,uBAAvB;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAE9C,OAAO,CAACd,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEc,OAAO,CAACQ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,KAAK,EAAE;AACLwC,MAAAA,cAAc,EAAE,MADX;AAELtD,MAAAA,KAAK,EAAE,MAFF;AAGLuD,MAAAA,aAAa,EAAE,WAHV;AAILC,MAAAA,UAAU,EAAE;AAJP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAcE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,OAAO,EAAElB,gBAHX;AAIE,IAAA,KAAK,EAAE;AAACzB,MAAAA,WAAW,EAAE;AAAd,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,EAsBE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,OAAO,EAAEuB,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF,CADF,CADF,CADF,EAmCE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEC,WADX;AAEE,uBAAgB,yBAFlB;AAGE,IAAA,IAAI,EAAEpB,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAA0C,IAAA,OAAO,EAAEoB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAQE,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,EAAE;AAACoB,MAAAA,KAAK,EAAE;AAAR,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEnC,YAAY,CAAEsB,aAAF,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACc,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,wBAAiB,oBAHnB;AAIE,IAAA,QAAQ,EAAErC,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBC,MAAAA,SAAS,EAAE;AACT5B,QAAAA,KAAK,EAAE,CADE;AAETc,QAAAA,OAAO,EAAE;AAFA;AAFO,KAAF,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,MAAM,CAACsC,QAAP,IAAmBtC,MAAM,CAACsC,QAAP,CAAgBf,OADtC,CAdF,CADF,EAoBE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACY,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,6BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,6BADL;AAEE,IAAA,IAAI,EAAEhC,MAAM,CAACD,YAAP,GAAsB,MAAtB,GAA+B,UAFvC;AAGE,IAAA,IAAI,EAAC,UAHP,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAEG,YAAY,CAAE,UAAF,CALxB;AAME,IAAA,QAAQ,EAAEP,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBC,MAAAA,SAAS,EAAE;AACT5B,QAAAA,KAAK,EAAE,CADE;AAETc,QAAAA,OAAO,EAAE;AAFA;AAFO,KAAF,CANpB;AAaE,IAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,oBAAW,4BADb;AAEE,MAAA,OAAO,EAAEb,uBAFX;AAGE,MAAA,WAAW,EAAEC,uBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGR,MAAM,CAACD,YAAP,GAAsB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAuC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL1C,CADF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EA6BE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBsB,OADtC,CA7BF,CApBF,EAqDE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAET,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArDF,CADF,CARF,CAnCF,EA8GE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEE,YADX;AAEE,uBAAgB,yBAFlB;AAGE,IAAA,IAAI,EAAEpB,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAA0C,IAAA,OAAO,EAAEoB,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAQE,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAE;AAAR,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEnC,YAAY,CAAEkB,QAAF,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACkB,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,wBAAiB,gBAHnB;AAIE,IAAA,QAAQ,EAAErC,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBG,MAAAA,OAAO,EAAE;AACP9B,QAAAA,KAAK,EAAE,IADA;AAEPc,QAAAA,OAAO,EAAE;AAFF;AAFS,KAAF,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,MAAM,CAACwC,IAAP,IAAexC,MAAM,CAACwC,IAAP,CAAYjB,OAD9B,CAdF,CADF,EAoBE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACY,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,wBAAiB,iBAHnB;AAIE,IAAA,QAAQ,EAAErC,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBG,MAAAA,OAAO,EAAE;AACP9B,QAAAA,KAAK,EAAE,2CADA;AAEPc,QAAAA,OAAO,EAAE;AAFF;AAFS,KAAF,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,MAAM,CAACyC,KAAP,IAAgBzC,MAAM,CAACyC,KAAP,CAAalB,OADhC,CAdF,CApBF,EAuCE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACY,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,wBAAiB,iBAHnB;AAIE,IAAA,QAAQ,EAAErC,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBC,MAAAA,SAAS,EAAE;AACT5B,QAAAA,KAAK,EAAE,EADE;AAETc,QAAAA,OAAO,EAAE;AAFA,OAFO;AAMlBgB,MAAAA,OAAO,EAAE;AACP9B,QAAAA,KAAK,EAAE,UADA;AAEPc,QAAAA,OAAO,EAAE;AAFF;AANS,KAAF,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAkBE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,MAAM,CAAC0C,KAAP,IAAgB1C,MAAM,CAAC0C,KAAP,CAAanB,OADhC,CAlBF,CAvCF,EA8DE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACY,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,wBAAiB,oBAHnB;AAIE,IAAA,QAAQ,EAAErC,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBC,MAAAA,SAAS,EAAE;AACT5B,QAAAA,KAAK,EAAE,CADE;AAETc,QAAAA,OAAO,EAAE;AAFA;AAFO,KAAF,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,MAAM,CAACsC,QAAP,IAAmBtC,MAAM,CAACsC,QAAP,CAAgBf,OADtC,CAdF,CA9DF,EAiFE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE;AAACY,MAAAA,YAAY,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,6BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,6BADL;AAEE,IAAA,IAAI,EAAEhC,MAAM,CAACD,YAAP,GAAsB,MAAtB,GAA+B,UAFvC;AAGE,IAAA,IAAI,EAAC,UAHP,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAEG,YAAY,CAAE,UAAF,CALxB;AAME,IAAA,QAAQ,EAAEP,QAAQ,CAAE;AAClBsC,MAAAA,QAAQ,EAAE,UADQ;AAElBC,MAAAA,SAAS,EAAE;AACT5B,QAAAA,KAAK,EAAE,CADE;AAETc,QAAAA,OAAO,EAAE;AAFA;AAFO,KAAF,CANpB;AAaE,IAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,oBAAW,4BADb;AAEE,MAAA,OAAO,EAAEb,uBAFX;AAGE,MAAA,WAAW,EAAEC,uBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGR,MAAM,CAACD,YAAP,GAAsB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAuC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL1C,CADF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EA6BE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBsB,OADtC,CA7BF,CAjFF,EAkHE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAEP,YANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlHF,CADF,CARF,CA9GF,CADF;AAyPD;;AAED,MAAM2B,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLvB,IAAAA,MAAM,EAAEsB,KAAK,CAACtB,MADT;AAELQ,IAAAA,KAAK,EAAEc,KAAK,CAACd;AAFR,GAAP;AAID,CALD;;AAOA,MAAMgB,kBAAkB,GAAG,CAACC,QAAD,EAAWF,QAAX,KAAwB;AACjD,SAAO;AACLhF,IAAAA,QAAQ,EAAEqD,IAAI,IAAI;AAChB6B,MAAAA,QAAQ,CAAElF,QAAQ,CAAEqD,IAAF,CAAV,CAAR;AACD,KAHI;AAILpD,IAAAA,QAAQ,EAAEoD,IAAI,IAAI;AAChB6B,MAAAA,QAAQ,CAAEjF,QAAQ,CAAEoD,IAAF,CAAV,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAevD,OAAO,CAAEgF,eAAF,EAAmBG,kBAAnB,CAAP,CAA+CtD,YAA/C,CAAf","sourcesContent":["import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  Container,\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {useForm} from 'react-hook-form';\nimport {setUsers, setLogin} from '../_actions/user';\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing (2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing (1),\n    top: theme.spacing (1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles (styles) (props => {\n  const {children, classes, onClose, ...other} = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose\n        ? <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles (theme => ({\n  root: {\n    padding: theme.spacing (2),\n  },\n})) (MuiDialogContent);\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing (2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction ButtonAppBar (props) {\n  const classes = useStyles ();\n  const [openLogin, setOpenLogin] = React.useState (false);\n  const [openRegister, setOpenRegister] = React.useState (false);\n\n  const {register, handleSubmit, errors} = useForm ();\n\n  const [values, setValues] = React.useState ({\n    password: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues ({...values, [prop]: event.target.value});\n  };\n\n  const handleClickShowPassword = () => {\n    setValues ({...values, showPassword: !values.showPassword});\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault ();\n  };\n\n  const handleClickOpen = () => {\n    setOpenLogin (true);\n  };\n  const handleClose = () => {\n    setOpenLogin (false);\n  };\n  const handleClickOpen1 = () => {\n    setOpenRegister (true);\n  };\n  const handleClose1 = () => {\n    setOpenRegister (false);\n  };\n\n  // integrate global state\n  const onSubmit = (data, e) => {\n    e.target.reset ();\n    props.setUsers (data);\n  };\n  const onSubmitLogin = (data, e) => {\n    e.target.reset ();\n    props.setLogin (data);\n  };\n  const {signUp} = props.signUp;\n  if (signUp.message === 'success') {\n    localStorage.setItem ('token', signUp.token);\n    window.location.href = 'http://localhost:3000';\n  }\n\n  // login\n  const {login} = props.login;\n  if (login.message === 'success') {\n    localStorage.setItem ('token', login.token);\n    window.location.href = 'http://localhost:3000';\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Container>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link\n                to=\"/\"\n                style={{\n                  textDecoration: 'none',\n                  color: '#fff',\n                  textTransform: 'uppercase',\n                  fontWeight: 'bold',\n                }}\n              >\n                AG-IT News\n              </Link>\n            </Typography>\n            <Button\n              color=\"inherit\"\n              variant=\"outlined\"\n              onClick={handleClickOpen1}\n              style={{marginRight: '10px'}}\n            >\n              Register\n            </Button>\n            <Button\n              color=\"inherit\"\n              variant=\"outlined\"\n              onClick={handleClickOpen}\n            >\n              Login\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={openLogin}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Login\n        </DialogTitle>\n        <DialogContent dividers style={{width: '500px'}}>\n          <form autoComplete=\"off\" onSubmit={handleSubmit (onSubmitLogin)}>\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\n              <Input\n                id=\"username\"\n                name=\"username\"\n                aria-describedby=\"my-helper-username\"\n                inputRef={register ({\n                  required: 'Required',\n                  minLength: {\n                    value: 5,\n                    message: 'Your username too short',\n                  },\n                })}\n              />\n              <FormHelperText id=\"my-helper-username\">\n                {errors.username && errors.username.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                id=\"standard-adornment-password\"\n                type={values.showPassword ? 'text' : 'password'}\n                name=\"password\"\n                // value={values.password}\n                onChange={handleChange ('password')}\n                inputRef={register ({\n                  required: 'Required',\n                  minLength: {\n                    value: 8,\n                    message: 'Your password too short',\n                  },\n                })}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n              <FormHelperText id=\"my-helper-username\">\n                {errors.password && errors.password.message}\n              </FormHelperText>\n            </FormControl>\n            <Button\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              fullWidth\n              type=\"submit\"\n              onClick={handleClose}\n            >\n              Login\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        onClose={handleClose1}\n        aria-labelledby=\"customized-dialog-title\"\n        open={openRegister}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose1}>\n          Register\n        </DialogTitle>\n        <DialogContent dividers style={{width: '500px'}}>\n          <form autoComplete=\"off\" onSubmit={handleSubmit (onSubmit)}>\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                aria-describedby=\"my-helper-name\"\n                inputRef={register ({\n                  required: 'required',\n                  pattern: {\n                    value: /\\w/,\n                    message: 'Value Name Not number',\n                  },\n                })}\n              />\n              <FormHelperText id=\"my-helper-username\">\n                {errors.name && errors.name.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                aria-describedby=\"my-helper-email\"\n                inputRef={register ({\n                  required: 'Required',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: 'invalid email address',\n                  },\n                })}\n              />\n              <FormHelperText id=\"my-helper-email\">\n                {errors.email && errors.email.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"phone\">Phone Number</InputLabel>\n              <Input\n                id=\"phone\"\n                name=\"phone\"\n                aria-describedby=\"my-helper-phone\"\n                inputRef={register ({\n                  required: 'Required',\n                  minLength: {\n                    value: 11,\n                    message: 'phone number too short (11 key)',\n                  },\n                  pattern: {\n                    value: /^[0-9]*$/,\n                    message: 'Invalid phone number',\n                  },\n                })}\n              />\n              <FormHelperText id=\"my-helper-email\" color=\"secondary\">\n                {errors.phone && errors.phone.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\n              <Input\n                id=\"username\"\n                name=\"username\"\n                aria-describedby=\"my-helper-username\"\n                inputRef={register ({\n                  required: 'Required',\n                  minLength: {\n                    value: 5,\n                    message: 'Your username too short',\n                  },\n                })}\n              />\n              <FormHelperText id=\"my-helper-username\">\n                {errors.username && errors.username.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl fullWidth style={{marginBottom: '15px'}}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                id=\"standard-adornment-password\"\n                type={values.showPassword ? 'text' : 'password'}\n                name=\"password\"\n                // value={values.password}\n                onChange={handleChange ('password')}\n                inputRef={register ({\n                  required: 'Required',\n                  minLength: {\n                    value: 8,\n                    message: 'Your password too short',\n                  },\n                })}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n              <FormHelperText id=\"my-helper-username\">\n                {errors.password && errors.password.message}\n              </FormHelperText>\n            </FormControl>\n            <Button\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              fullWidth\n              type=\"submit\"\n              onClick={handleClose1}\n            >\n              Register\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    signUp: state.signUp,\n    login: state.login,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setUsers: data => {\n      dispatch (setUsers (data));\n    },\n    setLogin: data => {\n      dispatch (setLogin (data));\n    },\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ButtonAppBar);\n"]},"metadata":{},"sourceType":"module"}