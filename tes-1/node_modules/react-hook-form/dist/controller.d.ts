import * as React from 'react';
import { Mode, ValidationOptions } from './types';
export declare type EventFunction = (args: any) => any;
export declare type Props = {
    name: string;
    as: React.ElementType<any> | React.FunctionComponent<any> | string | any;
    rules?: ValidationOptions;
    onChange?: EventFunction;
    onBlur?: EventFunction;
    mode?: Mode;
    onChangeName?: string;
    onBlurName?: string;
    defaultValue?: any;
    control: any;
};
declare const Controller: ({ name, rules, as: InnerComponent, onChange, onBlur, onChangeName, onBlurName, defaultValue, control: { defaultValues, fields, setValue, register, unregister, errors, mode: { isOnSubmit, isOnBlur }, reValidateMode: { isReValidateOnBlur, isReValidateOnSubmit }, formState: { isSubmitted }, }, ...rest }: Props) => JSX.Element;
export { Controller };
